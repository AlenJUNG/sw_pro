package D04_ÀÎµ¦½ºÆ®¸®;

public class D04_ex08_P0075_°ø³îÀÌ {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}



시간 제한 
 
최대 40 개의 Test Input 입력시 C/C++ 1 초, Java 1.5 초
 

메모리 제한 
 
Stack : 1 Mbytes  /  Total : 256 Mbytes
 

코드길이 제한 
 
128 Kbytes
 

채점 
 
답안을 제출하면 Test Input에 대한 결과를 판정해서 실시간으로 알려준다.

모든 케이스에 대해 정답일 경우 Pass, 그 외의 경우 Fail 이다.
 




철수와 민수는 공놀이를 하러 공원에 왔다. 두 친구는 그냥 공놀이를 하면 재미가 없을 것 같아서, 공놀이를 하면서 점수를 세기로 하였다.




두 친구는 각자 수가 적혀있는 N개의 공을 가지고 있다. 그리고 철수부터 자신이 가진 공에 적힌 수를 오름차순 정렬하였을때 A번째 공을 선택하여 민수에게 던진다. 민수는 그 공을 받은 후 자신이 가진 공 중에서 그 공에 적힌 수보다 작은 수가 적힌 공의 개수를 철수에게 알려준다. 그 것이 철수의 점수가 된다. 이번에는 민수가 공을 던질 차례이다. 민수 역시 자신이 가진 공에 적힌 수를 오름차순 정렬하였을때 B번째 공을 선택하여 철수에게 던진다. 역시 철수가 공을 받고 그 공에 적힌 수보다 작은 수가 적힌 공의 개수를 민수에게 알려준다. 그 것이 민수의 점수가 된다.










예를 들어 위와 같이 철수(파랑)와 민수(주황)가 각각 공을 가지고 있다.









철수가 3번째 공인 3이 적힌 공을 민수에게 던진다. 민수는 3보다 작은 공을 2개 가지고 있기 때문에 철수가 2점을 얻게 된다.









다음 민수 차례에서는, 민수가 4번째 공인 3이 적힌 공을 철수에게 던진다. 철수는 3보다 작은 공을 2개 가지고 있기 때문에 민수가 2점을 얻게 된다.




둘은 공놀이를 아주 좋아하기 때문에 공을 여러 번 주고받기로 하였다. 당신이 철수와 민수가 던지는 공의 순번을 알고 있다고 할 때 철수와 민수가 얻을 총 점수를 계산해 보자.







[제한조건]

1. 철수와 민수가 가진 공의 개수 N은 1 이상 5만 이하의 정수이다.

2. 둘이 공놀이를 주고받는 횟수 Q는 1 이상 10만 이하의 정수이다.

3. 공에 적혀있는 수 P는 1 이상 10억 이하의 정수이다.

4. 주고받는 공의 정보 A와 B는 각자 가진 공의 개수보다 작거나 같다. 즉, 공을 던지지 못하는 경우는 없다.

5. 공은 항상 철수가 먼저 던지고 철수의 점수를 계산 후 민수가 던진다.

6. 주고받는 공의 정보 A, B는 공에 적힌 수가 아닌, 각자 가지고 있는 공을 공에 적힌 수의 오름차순으로 정렬했을 때의 순번이다.







[입력]

맨 처음 테스트케이스 개수 T 가 주어지고 그 다음 T개의 테스트 케이스가 주어진다. 각 테스트 케이스의 첫 줄에는 둘이 가진 공의 개수 N 과 둘이 주고받은 공놀이의 횟수 Q가 주어진다. 그 다음 줄에 철수가 가지고 있는 N개의 공에 적혀있는 수가 공백으로 구분되어 오름차순으로 주어지고 그 다음 줄에 민수가 가지고 있는 N개의 공에 적혀있는 수가 공백으로 구분되어 오름차순으로 주어진다. 그 다음 Q개의 줄에는 철수와 민수가 던진 공의 순번 A와 B가 공백으로 구분되어 주어진다. A가 철수가 던진 공의 순번, B가 민수가 던진 공의 순번이다.







[출력]

테스트케이스 하나 당 한 줄에 출력한다. 각 테스트 케이스에 대해 #x (x는 테스트케이스의 번호, 1부터 시작)를 출력하고, 철수와 민수가 얻을 점수를 공백으로 구분하여 출력한다.
