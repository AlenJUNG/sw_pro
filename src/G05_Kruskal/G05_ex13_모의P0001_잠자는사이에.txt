트리 그리기를 좋아하는 철수가 어느 날 방향이 있는 간선을 사용하여 트리를 하나 그렸다. (방향이 있는 간선의 시작점은 부모노드를, 끝점은 자식노드를 의미한다.) 그리고 트리를 너무 오래 그려 피곤해진 철수는 잠이 들었다.

그 사이 민수가 놀러와 철수가 그린 트리에 장난을 쳤다. 바로 트리의 아무 두 정점을 골라 그 둘을 잇는 방향이 있는 간선 한 개를 덧그린 것이었다.

잠에서 깨어난 철수는 트리가 망가져 기분이 좋지 않았다. 그림을 곰곰이 보던 철수는 선을 단 하나만 지우면 다시 트리를 만들 수 있다는 것 발견하였다.















위와 같이 망가진 그림에서 2에서 1로 가는 간선을 지우면 다시 트리가 되는 것이다.

철수를 도와 트리를 복구해 보자.




[제한조건]

1. 정점의 수 N은 3 이상 30000 이하의 정수이다. (3 ≤ N ≤ 30,000)

   각 정점은 1 ~ N 까지의 번호를 갖는다.

2. 입력받는 간선의 수는 정점의 수와 같다.





[입력]

맨 처음 테스트 케이스의 개수 T가 주어지며, 그 다음 T개의 테스트 케이스가 주어진다. 테스트 케이스의 첫 줄에는 정점의 수 N이 주어지며 그 다음 N개의 줄에 방향이 있는 간선의 부모와 자식을 나타내는 두 수가 주어진다.




[출력]

각 테스트 케이스에 대해 #x (x는 테스트 케이스 번호, 1부터 시작)을 출력하고 공백을 하나 둔 다음, 지워야 할 간선의 정보(부모노드와 자식노드의 번호)를 공백으로 구분하여 출력하라. 단, 답이 될 수 있는 간선이 여러 개인 경우 입력 받은 간선의 순서 중 가장 마지막 간선의 정보를 출력하라.




[입출력 예]

(입력)

2

3

1 2

1 3

2 3

4

2 1

3 1

1 4

4 2




(출력)

#1 2 3

#2 2 1
