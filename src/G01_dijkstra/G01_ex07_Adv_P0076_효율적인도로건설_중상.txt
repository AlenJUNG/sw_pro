2
5 4
1 2 1
2 3 2
3 4 1
4 5 2
10 12
1 5 6
1 6 12
1 8 8
2 4 1
3 5 3
4 6 4
5 7 5
6 8 5
6 10 1
7 9 8
8 9 1
9 10 6


어떤 도시의 도로건축과에서 일하는 아현이는 이번에 신규 도로를 건설해야 하는 일을 맡았다.

현재 이 도시는 N개의 지점이 M개의 양방향 도로로 연결되어 있다. 각 지점에는 편의상 1부터 N까지의 이름을 붙여서 관리하고 있다. 또한 M개의 도로는 각각 이동에 필요한 시간 c를 갖고 있다.




이 도시의 많은 사람들은 1번 지점에서 N번 지점으로 최단시간경로(시간이 가장 적게 걸리는 경로)를 활용하여 이동하기 때문에, 이들의 이동 시간을 줄이기 위해 1개의 도로를 추가로 건설하고 싶다. 사람들이 빨리 이동할 수 있도록 새로 건설하는 도로의 이동시간은 1이다.




도로건설 후보지를 선정하기 위해 신규로 1개의 도로를 건설했을 때, 1번 지점에서 N번 지점으로 가는 최단시간경로의 이동시간이 줄어드는 지점의 쌍이 몇 개인지 찾으려고 한다. 물론 이미 도로가 존재하는 두 지점 사이에도 시간을 단축시키기 위한 신규 도로를 추가 할 수 있다. 단, 이번에 추가로 건설하려는 도로는 1번 지점이나 N번 지점과는 연결할 수 없다. 또한 양방향 도로이기 때문에 (지점 A, 지점 B)와 (지점 B, 지점 A)는 같은 쌍으로 간주한다.






[그림1]




[그림1]의 경우 지점이 5개, 도로가 4개인 도시이다. 2번 지점과 3번 지점 사이에 새로운 도로를 건설하거나, 2번 지점과 4번 지점 사이에 새로운 도로를 건설하면 1번 지점에서 5번 지점으로 이동하는 최단시간이 짧아진다. 하지만 3번 지점과 4번 지점 사이에 새로운 도로가 추가되어도 1번 지점에서 5번 지점까지의 최단시간은 변화가 없다.






[그림2]




[그림2]는 10개의 지점과 12개의 도로로 이루어진 도시를 도식화 한 것이며, 이때 1번 지점에서 10번 지점까지 최단시간은 13이다. 이 경우 다섯 쌍 중 한 곳에 이동 시간이 1인 도로를 건설하면 1번 지점에서 10번 지점으로 이동하는 최단시간이 짧아지게 된다.

3번 지점 - 6번 지점 : 11 = 6 + 3 + 1 + 1

4번 지점 - 5번 지점 : 12 = 6 + 1 + 4 + 1

5번 지점 - 6번 지점 : 8 = 6 + 1 + 1

6번 지점 - 8번 지점 : 10 = 8 + 1 + 1

6번 지점 - 9번 지점 : 11 = 8 + 1 + 1 + 1




아현이를 도와 신규 도로를 건설시 1번 지점에서 N번 지점으로 이동하는 시간이 기존의 최단 시간보다 짧아지는 지점의 쌍을 구해보자.




[제한 조건]

1. 지점의 수 N은 5이상 50,000 이하의 정수이다. (5 ≤ N ≤ 50,000)

2. 도로의 수 M은 4이상 100,000 이하의 정수이다. (4 ≤ M ≤ 100,000)

3. 각 도로의 이동에 필요한 시간 c는 1 이상 10,000 이하의 정수이다. (1 ≤ c ≤ 10,000)

4. 임의의 서로 다른 두 지점 사이를 연결한 경로는 항상 존재한다.

5. 임의의 서로 다른 두 지점 사이를 잇는 도로는 두 개 이상 존재하지 않는다.

6. 1번 지점이나 N번 지점에는 신규 도로를 건설 할 수 없다.




[입력]

첫 줄에 테스트 케이스의 개수 T가 주어진다. 첫 번째 줄에는 지점의 개수 N과 도로의 개수 M이 공백으로 구분되어 주어진다. 그리고 M개의 줄에 걸쳐 도로의 양끝 지점의 번호 a, b 와 해당 도로의 이동에 필요한 시간 c가 공백으로 구분되어 주어진다. 




[출력]

각각의 테스트 케이스에 대하여 #x (x는 테스트 케이스의 번호, 1부터 시작)를 출력하고 공백을 하나 출력한 후 신규 도로를 건설했을 때 1부터 N까지의 최단시간경로 이동시간을 줄일 수 있는 지점의 쌍의 개수를 출력한다. 단, 1번 지점 또는 N번 지점은 해당 지점으로 선택할 수 없음에 유의하시오.




[입출력 예]

(입력)

2
5 4
1 2 1
2 3 2
3 4 1
4 5 2
10 12
1 5 6
1 6 12
1 8 8
2 4 1
3 5 3
4 6 4
5 7 5

6 8 5
6 10 1
7 9 8
8 9 1
9 10 6




(출력)

#1 2
#2 5




(sample_input.txt 에 대한 output)


#1 2
#2 5
#3 49
#4 3651
#5 3945
#6 853
#7 316713
#8 161
#9 0
#10 137611
#11 449951893
#12 50784654
#13 49975003
#14 624900004
#15 45363901
