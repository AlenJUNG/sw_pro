package D02_Tree;

import java.util.*;
import java.io.*;

/* Tree : 자료들 사이의 계층적 관계를 나타내는데 사용하는 자료구조. 
 *        기본적으로 1개 이상의 노드를 가지는 집합
 *  1.루트 노드가 존재.
 *	2.사이클이 존재하지 않음. 
 * 	3.다른 노드들은 원소가 중복되지 않는 n개의 부분 트리로 나누어 지며 각각은 루트의 부분 트리.
 */

/* BinarySearchTree : Java에서는 TreeSet과 TreeMap 사용
 * 	1.모든 원소는 키를 가지며, 키는 전체 트리에서 유일한 값을 가짐.
 *  2.왼쪽 자식의 키 값은 부모보다 작아야 한다.
 *  3.오른쪽 자식의 키 값은 부모보다 커야 한다.
 *  4.BST는 그 부분트리도 BST. * 
 */

/* * 주의 *
 * BST로 구현된 set, map 자료구조는 
 * 노드의 추가 및 삭제에 걸리는 시간복잡도가 
 * O(logN)인 자료구조로 일반적으로 HashMap보다 느리다.
 */
